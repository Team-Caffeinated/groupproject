/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    //For Gson
    id 'org.openjfx.javafxplugin' version '0.0.10'

    //For jacoco
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //For Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //For Project Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    //For log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version '2.14.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core' version '2.14.1'
}

application {
    // Define the main class for the application.
    mainClass = 'edu.isu.cs2263.acquire.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

javafx{
    version = '17'
    modules = ['javafx.controls']
}

test{
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport{
    dependsOn test // tests are required to run before generating the report
}
jacoco{
    toolVersion = "0.8.7"
    reportsDirectory = layout.buidDirectory.dir('customJacocoReportDir')
}